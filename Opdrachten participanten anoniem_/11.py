# schrijf je code hier
class Card:
    def __init__(self, suit, value):
        """
        Initializes a Card object with the given suit and value.

        Args:
            suit (str): The suit or color of the card.
            value (str): The value of the card.

        Examples:
            >>> card = Card("Spades", "Ace")
            >>> card.suit
            'Spades'
            >>> card.value
            'Ace'
        """
        self.suit = suit
        self.value = value

    def description(self):
        """
        Returns the description of the card.

        Returns:
            str: The description of the card.

        Examples:
            >>> card = Card("Spades", "Ace")
            >>> card.description()
            'Ace of Spades'
        """
        return f"{self.value} of {self.suit}"

class Deck:
    def initialize(self):
        """
        Initializes a Deck object with a collection of cards.

        The deck is generated by combining four suits (Spades, Hearts, Clubs, Diamonds) with all possible values.

        Examples:
            >>> deck = Deck()
            >>> deck.initialize()
            >>> len(deck._cards)
            52
            >>> card = deck._cards[0]
            >>> card.description()
            '2 of Spades'
        """
        self._suits = ["Spades", "Hearts", "Clubs", "Diamonds"]
        self._values = ["2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King", "Ace"]
        self._cards = []

        for suit in self._suits:
            for value in self._values:
                card = Card(suit, value)
                self._cards.append(card)

if __name__ == "__main__":
    # schrijf je test hier
    # test door middel van de play button rechtsbovenin

    #card = Card("Spades", "Ace")
    #print(card.description())  # Output: Ace of Spades

    deck = Deck()
    deck.initialize()
    print(len(deck._cards))  # Output: 52
    card = deck._cards[0]
    print(card.description())  # Output: 2 of Spades